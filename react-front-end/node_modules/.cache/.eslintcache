[{"D:\\React_springBoot front_end\\react-front-end\\src\\index.js":"1","D:\\React_springBoot front_end\\react-front-end\\src\\reportWebVitals.js":"2","D:\\React_springBoot front_end\\react-front-end\\src\\App.js":"3","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\ListEmployee.jsx":"4","D:\\React_springBoot front_end\\react-front-end\\src\\Services\\EmployeeService.js":"5","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\HeaderComponent.jsx":"6","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\FooterComponent.jsx":"7","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\CreateOrUpdateEmployee.jsx":"8","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\ViewEmployee.jsx":"9"},{"size":582,"mtime":1683873435514,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1683873088778,"results":"12","hashOfConfig":"11"},{"size":847,"mtime":1683967960434,"results":"13","hashOfConfig":"11"},{"size":2414,"mtime":1683967881654,"results":"14","hashOfConfig":"11"},{"size":655,"mtime":1683966814071,"results":"15","hashOfConfig":"11"},{"size":510,"mtime":1683962571406,"results":"16","hashOfConfig":"11"},{"size":230,"mtime":1683882857121,"results":"17","hashOfConfig":"11"},{"size":3502,"mtime":1683966748128,"results":"18","hashOfConfig":"11"},{"size":1333,"mtime":1683969455929,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b9b8y1",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"D:\\React_springBoot front_end\\react-front-end\\src\\index.js",[],[],"D:\\React_springBoot front_end\\react-front-end\\src\\reportWebVitals.js",[],[],"D:\\React_springBoot front_end\\react-front-end\\src\\App.js",[],[],"D:\\React_springBoot front_end\\react-front-end\\src\\Components\\ListEmployee.jsx",["52"],[],"import { useEffect, useState } from \"react\";\r\nimport EmployeeService from \"../Services/EmployeeService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ViewEmployee from \"./ViewEmployee\";\r\n\r\nconst ListEmployee = () => {\r\n    const navigate = useNavigate();\r\n    const [employees,setEmployees] = useState([]);\r\n    const editEmployee = (employeeId) => {\r\n        navigate(`add-employee/${employeeId}`)\r\n    }\r\n    const deleteEmployee = (employeeId) => {\r\n        EmployeeService.DeleteEmployee(employeeId).then(() => {\r\n            setEmployees(employees.filter(emp => emp.id !== employeeId));\r\n        });\r\n    }\r\n    const viewEmployee = (employeeId) => {\r\n        navigate(`view-employee/${employeeId}`);\r\n    }\r\n    useEffect(()=>{\r\n        EmployeeService.getEmployees().then((res) => {\r\n            setEmployees(res.data);\r\n        }).catch(err => console.log(err));\r\n    },[]);\r\n    return(\r\n        <>\r\n        <h2 className=\"text-center\">Employees</h2>\r\n        <div className=\"row\">\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Employee FirstName</th>\r\n                    <th>Employee LastName</th>\r\n                    <th>Employee Email</th>\r\n                    <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        employees.map(\r\n                            employee => \r\n                            <tr key= {employee.id}>\r\n                                <td key={employee.firstName}>{employee.firstName}</td>\r\n                                <td key={employee.lastName}>{employee.lastName}</td>\r\n                                <td key={employee.email}>{employee.email}</td>\r\n                                <td><button className=\"btn btn-info\" onClick={()=>editEmployee(employee.id)}>Update</button>\r\n                                <button className=\"btn btn-danger\" onClick={() => deleteEmployee(employee.id)}>Delete</button>\r\n                                <button className=\"btn btn-secondary\" onClick={() => viewEmployee(employee.id)}>View</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default ListEmployee;","D:\\React_springBoot front_end\\react-front-end\\src\\Services\\EmployeeService.js",["53"],[],"import axios from 'axios';\r\nconst EMPLOYEE_BASE_URL = \"http://localhost:8080/api/employees\"\r\nclass EmployeeService {\r\n    getEmployees() {\r\n        return axios.get(EMPLOYEE_BASE_URL);\r\n    }\r\n    createEmployee(employee) {\r\n        return axios.post(EMPLOYEE_BASE_URL,employee)\r\n    }\r\n    getEmployeeById(employeeId) {\r\n        return axios.get(EMPLOYEE_BASE_URL+'/'+employeeId);\r\n    }\r\n    updateEmployee(employeeId,employee) {\r\n        return axios.put(EMPLOYEE_BASE_URL+'/'+employeeId,employee);\r\n    }\r\n    DeleteEmployee(employeeId) {\r\n        return axios.delete(EMPLOYEE_BASE_URL+'/'+employeeId);\r\n    }\r\n}\r\nexport default new EmployeeService();","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\HeaderComponent.jsx",[],[],"D:\\React_springBoot front_end\\react-front-end\\src\\Components\\FooterComponent.jsx",[],[],[],"D:\\React_springBoot front_end\\react-front-end\\src\\Components\\CreateOrUpdateEmployee.jsx",["54"],[],"import { useEffect, useState } from \"react\";\r\nimport EmployeeService from \"../Services/EmployeeService\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst CreateOrUpdateEmployee = () => {\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n    const [firstName,setFirstName] = useState(\"\");\r\n    const [lastName,setLastName] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const changeFirstNameHandler = (event) => {\r\n        setFirstName(event.target.value)\r\n    }\r\n    const changeLastNameHandler = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n    const changeEmailHandler = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        const employee = {firstName: firstName,lastName:lastName,email:email};\r\n        console.log(employee);\r\n        if(id < 0){\r\n            EmployeeService.createEmployee(employee).then(()=>{\r\n                navigate(\"/\");\r\n            });\r\n        } else {\r\n            EmployeeService.updateEmployee(id,employee).then(()=>{\r\n                navigate(\"/\");\r\n            });\r\n        }\r\n    }\r\n    const cancel = () => {\r\n        navigate(\"/\")\r\n    }\r\n    useEffect(()=>{\r\n        if(id < 0) {\r\n            return;\r\n        }\r\n        EmployeeService.getEmployeeById(id).then(res => {\r\n            const employee = res.data;\r\n            setFirstName(employee.firstName);\r\n            setLastName(employee.lastName);\r\n            setEmail(employee.email);\r\n        }).catch(err => console.log(err));\r\n    },[]);\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"container\" style={{marginTop:\"4rem\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h3 className=\"text-center\">{id<0?\"Add\":\"Update\"} Employee</h3>\r\n                    <div className=\"card-body\">\r\n                        <form className=\"form\">\r\n                            <div className=\"form-group\">\r\n                                <label>First Name</label>\r\n                                <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" className=\"form -control\" \r\n                                value={firstName} onChange={changeFirstNameHandler}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Last Name</label>\r\n                                <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" className=\"form -control\" \r\n                                value={lastName} onChange={changeLastNameHandler}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Email</label>\r\n                                <input type=\"text\" placeholder=\"Email\" name=\"email\" className=\"form -control\" \r\n                                value={email} onChange={changeEmailHandler}/>\r\n                            </div>\r\n                            <div>\r\n                            <button className=\"btn btn-success\"  onClick={saveOrUpdateEmployee}>Save</button>\r\n                            <button className=\"btn btn-danger\"onClick={cancel}>Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default CreateOrUpdateEmployee;","D:\\React_springBoot front_end\\react-front-end\\src\\Components\\ViewEmployee.jsx",["55","56"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport EmployeeService from \"../Services/EmployeeService\";\r\n\r\nconst ViewEmployee = () => {\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n    const [employee, setEmployee] = useState({});\r\n    useEffect(() => {\r\n        EmployeeService.getEmployeeById(id).then( (res) =>{\r\n            setEmployee(res.data);\r\n            console.log(employee)\r\n        }).catch(err => console.log(err));\r\n    },[]);\r\n    return(\r\n    <>\r\n      <div class=\"card\" style={{\"width\": \"18rem\",\"marginTop\":\"4rem\",\"marginLeft\":\"auto\",\"marginRight\":\"auto\"}}>\r\n        <img class=\"card-img-top\" style={{\"border\":\"2px solid\"}} src=\"https://www.svgrepo.com/show/33058/employee.svg\" alt=\"Card image cap\"/>\r\n        <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Employee details </h5>\r\n        <ul class=\"list-group list-group-flush\">\r\n        <li class=\"list-group-item\">First Name: {employee.firstName}</li>\r\n        <li class=\"list-group-item\">Last Name: {employee.lastName}</li>\r\n        <li class=\"list-group-item\">Email: {employee.email}</li>\r\n        </ul>\r\n        <button onClick={()=>{navigate('/')}} class=\"btn btn-primary\">back</button>\r\n        </div>\r\n     </div>\r\n    </>\r\n    );\r\n}\r\nexport default ViewEmployee;",{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":20,"column":1,"nodeType":"63","endLine":20,"endColumn":38},{"ruleId":"64","severity":1,"message":"65","line":47,"column":7,"nodeType":"66","endLine":47,"endColumn":9,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":14,"column":7,"nodeType":"66","endLine":14,"endColumn":9,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":9,"nodeType":"72","endLine":18,"endColumn":142},"no-unused-vars","'ViewEmployee' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has missing dependencies: 'employee' and 'id'. Either include them or remove the dependency array.",["74"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [id]",{"range":"79","text":"80"},"Update the dependencies array to be: [employee, id]",{"range":"81","text":"82"},[1593,1595],"[id]",[521,523],"[employee, id]"]